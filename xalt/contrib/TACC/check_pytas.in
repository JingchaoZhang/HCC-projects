#!/usr/bin/env python
# -*- python -*-
from __future__ import print_function
import os, sys, re, csv
import numpy
import json
from urllib2       import Request, urlopen, URLError

from pytas import client

def field_of_science(account):
  s       = "https://tas.tacc.utexas.edu/api/web/project?name=%s" % account
  request = Request(s)
  answer  = '{"field_of_science":"not_found"}'
  try:
    response = urlopen(request)
    answer   = response.read()
  except:
    pass

  ansT = json.loads(answer)
  return ansT['field_of_science']



def main():
  os.environ['TAS_URL']='https://tas.tacc.utexas.edu/api/'
  os.environ['TAS_CLIENT_KEY']='tasclient'
  os.environ['TAS_CLIENT_SECRET']='9u3$6x4'

  tas=client()

  projectA=tas.projects_for_user(sys.argv[1])

  resultT = {}

  if (projectA):
    for p in projectA:
      for allocationT in p['allocations']:
          res    = allocationT['resource'] 
          status = allocationT['status']
          if (res == "Stampede3" and status == "Active"):
              chargeCode = p["chargeCode"]
              fos    = field_of_science(p["chargeCode"])
              resultT['resource']         = res
              resultT['account']          = chargeCode
              resultT['field_of_science'] = fos
              resultT['status']           = status
              break
      if (not resultT):
        for allocationT in p['allocations']:
          res    = allocationT['resource'] 
          if (res == "Stampede3"):
              chargeCode = p["chargeCode"]
              fos    = field_of_science(p["chargeCode"])
              resultT['resource']         = res
              resultT['account']          = chargeCode
              resultT['field_of_science'] = fos
              resultT['status']           = allocationT['status']
              break
          
        
  print(json.dumps(resultT, sort_keys=True, indent=1, separators=(',',': ')))




if ( __name__ == '__main__'):
  main()

